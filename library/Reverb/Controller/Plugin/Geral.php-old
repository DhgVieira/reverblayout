<?php

/**
 * Cria o plugin para carregar informações para todo o site
 *
 * @name Reverb_Controller_Plugin_Geral
 */
class Reverb_Controller_Plugin_Geral extends Zend_Controller_Plugin_Abstract {
	/**
	 * Método da classe
	 * 
	 * @name preDispatch
	 */
	public function preDispatch(Zend_Controller_Request_Abstract $request) {
		// Busca o view
		$viewRenderer = Zend_Controller_Action_HelperBroker::getStaticHelper("viewRenderer");
		$viewRenderer->initView();
		$view = $viewRenderer->view;
		
		if(substr($_SERVER['REQUEST_URI'], strrpos($_SERVER['REQUEST_URI'], ".")) == ".jpg") {
			return TRUE;
		}
		
		if($this->_request->getParam("module") == "user") {
			return TRUE;
		}

	


		//variaveis para identificar mobile

		$iphone = strpos($_SERVER['HTTP_USER_AGENT'],"iPhone");
		$iPad = strpos($_SERVER['HTTP_USER_AGENT'],"iPad");
		$android = strpos($_SERVER['HTTP_USER_AGENT'],"Android");
		$palmpre = strpos($_SERVER['HTTP_USER_AGENT'],"webOS");
		$berry = strpos($_SERVER['HTTP_USER_AGENT'],"BlackBerry");
		$ipod = strpos($_SERVER['HTTP_USER_AGENT'],"iPod");
		
		//se for mobile eu vou assinar uma variavel para identificar e remover um menu
		if ($iphone || $android || $palmpre || $ipod || $iPad || $berry == true){
			//se entrar e porque e dispositivo movel e assino ao view como true
			$ismobile = true;
			//assino ao view
			$view->_isMobile = $ismobile;

		}

		//inicio a sessao do carrinho
		$carrinho = new Zend_Session_Namespace("carrinho");
		//inicio a sessao do usuario
		$usuarios = new Zend_Session_Namespace("usuarios");
		//inicia a sessao de cep
		$cep_session = new Zend_Session_Namespace("cep_session");
		//inicio a sessao de produtos vistos
		$produtos_vistos = new Zend_Session_Namespace("vistos");

		
		//inicio o model de produtos
		$model_produtos = new Default_Model_Produtos();
		if ($usuarios->logado == TRUE) {
		
	

			//inicio o model de scraps
			$model_scraps = new Default_Model_Mescraps();
			//faco o select dos scraps publicos
			$select_scraps = $model_scraps->select()
							//digo que nao existe integridade entre as tabelas
							->setIntegrityCheck(false)
							//escolho a tabela do select para o join
							->from('me_scraps')
							//crio o inner join das pessoas	
							->joinInner('cadastros',
							'cadastros.NR_SEQ_CADASTRO_CASO = me_scraps.NR_SEQ_AUTOR_SBRC',array('NR_SEQ_CADASTRO_CASO', 'DS_NOME_CASO', 'DS_EXT_CACH'))
							->where("ST_PUBLICO_SBRC = 0")
							->where("NR_SEQ_CADASTRO_SBRC = ?", $usuarios->idperfil)
							->where("ST_LIDA_SBRC = 0")
							->limit(2)
							->order("DT_POST_SBRC DESC");
			//assino ao view

			$view->_publicos = $model_scraps->fetchAll($select_scraps);

			//faco o select dos scraps privados
			$select_privados = $model_scraps->select()
			//digo que nao existe integridade entre as tabelas
							->setIntegrityCheck(false)
							//escolho a tabela do select para o join
							->from('me_scraps')
							//crio o inner join das pessoas	
							->joinInner('cadastros',
							'cadastros.NR_SEQ_CADASTRO_CASO = me_scraps.NR_SEQ_AUTOR_SBRC',array('NR_SEQ_CADASTRO_CASO', 'DS_NOME_CASO','DS_EXT_CACH'))
							->where("ST_PUBLICO_SBRC = 1")
							->where("NR_SEQ_CADASTRO_SBRC = ?", $usuarios->idperfil)
							->where("ST_LIDA_SBRC = 0")
							->limit(3)
							->order("DT_POST_SBRC DESC");
			//assino ao view
			$view->_privados = $model_scraps->fetchAll($select_privados);
			//crio o adaptador para query
			$db = Zend_Registry::get("db");
			//crio a query para selecionar os comentarios
			$select_total_amigos = "SELECT 
										*
									FROM 
										autorizacoes
									INNER JOIN
										cadastros
									ON 
										cadastros.NR_SEQ_CADASTRO_CASO = autorizacoes.NR_SEQ_CADASTRO_AURC
									WHERE
										NR_SEQ_ME_AURC = $usuarios->idperfil
									AND 
										ST_CHAVE_AURC = 'I'";
		
			// Monta a query
			$query = $db->query($select_total_amigos);
			//crio uma lista de comentarios
			$lista = $query->fetchAll();
			//assino quantidade de amigos ao view
			$view->_amigos = $lista;

			//atribuo 1 para variavel logado para mostrar os itens do menu
			$view->_logado = 1;
			//assino as variaveis do usuario logado
			$view->_email_usuario = $usuarios->email;
			$view->_nome_usuario = $usuarios->nome;
			$view->_idperfil = $usuarios->idperfil;
		}
		
		//pego o ultimo visitado para fazer a query
		$ultimo_visto = end($produtos_vistos->produtos);

		//crio uma query para exibir sugestões de produtos
		$select_sugestoes = $model_produtos->select()
		//digo que nao existe integridade entre as tabelas
		->setIntegrityCheck(false)
		//escolho a tabela do select para o join
		->from('produtos', array('NR_SEQ_PRODUTO_PRRC',
								 'VL_PRODUTO_PRRC',
								 'DS_PRODUTO_PRRC',
								 'DS_EXT_PRRC',
								 'TP_DESTAQUE_PRRC',
								 'DS_FRETEGRATIS_PRRC',
								 'NR_SEQ_CATEGORIA_PRRC',
								 'NR_SEQ_TIPO_PRRC',
								  'VL_PROMO_PRRC'))
		->joinInner("estoque",
					"produtos.NR_SEQ_PRODUTO_PRRC = estoque.NR_SEQ_PRODUTO_ESRC", array("NR_QTDE_ESRC"))
		->joinLeft("tamanhos",
					"tamanhos.NR_SEQ_TAMANHO_TARC = estoque.NR_SEQ_TAMANHO_ESRC", array("NR_SEQ_TAMANHO_TARC"))
		//coloco as condições pertence so a loja
		->where("NR_SEQ_LOJAS_PRRC = 1")
		//nao e classic
		->where("DS_CLASSIC_PRRC = 'N'")
		//produto e ativo
		->where("ST_PRODUTOS_PRRC = 'A'")
		//quantidade em estoque positiva
		->where("NR_QTDE_ESRC > 0");
		//se ja tiver escolhido um antioriemnte
		if($ultimo_visto["categoria"] != ""){
			//o ultimo visitado
			$select_sugestoes->where("NR_SEQ_CATEGORIA_PRRC = ?", $ultimo_visto["categoria"]);
		}
		//removo os buttons
		$select_sugestoes->where("NR_SEQ_TIPO_PRRC not in (4,24,139,140,65)")
		//ordeno randomicamente
		->order("RAND()")
		//limito em 4
		->limit(4);
		//assino ao view
		$view->_sugestoes = $model_produtos->fetchAll($select_sugestoes);
		//assino os ultimos produtos visualizados
		$view->_visitados = $produtos_vistos->produtos;


		

		//assino ao view o cep e o valor do frete
		$view->_cepinformado = $cep_session->cep;
		$view->_valorfrete = $cep_session->valor;

		$data_hoje = date("Y-m-d");
		//crio a query do produto do dia
		$db_prod = Zend_Registry::get("db");
		//crio a query para selecionar o banner do produto do dia
		$select_produto_dia = "SELECT 
										*
									FROM 
										banners_agendados
									WHERE
									 DT_PUBLICACAO_BARC LIKE '%$data_hoje%'
								 	LIMIT 1";

								 
		
			// Monta a query
			$query_produto_dia = $db_prod->query($select_produto_dia);
			//crio uma lista de comentarios
			$lista_produtos = $query_produto_dia->fetchAll();

			//agora crio a query para pegar as informações do produto do dia
			$select_dia = $model_produtos->select()->where("NR_SEQ_PRODUTO_PRRC = " . $lista_produtos[0]['NR_SEQ_PRODUTO_BARC']);

			
			//assino quantidade de amigos ao view
			$view->_produto_dia = $model_produtos->fetchRow($select_dia);

			//inicio o model de tamanho
			$model_tamanho = new Default_Model_Tamanhos();

			foreach ($carrinho->produtos as $key => $item) {
				//inicio  a query do tamanho escolhido
				$select_tamanho = $model_tamanho->select()
								->where("NR_SEQ_TAMANHO_TARC = ?", $item['tamanho']);

				//armazeno em uma variavel
				$tamanho_produto = $model_tamanho->fetchRow($select_tamanho);
				//aqui verifico se e promo ou não
				if ($item['vl_promo'] != 0) {
					//jogo o valor da promo no valor do produto
					$valor = $item['vl_promo'];
					
					//recebo a quantidade
					$quantidade = $item['quantidade'];
				
					//multiplico pela quantidade do produto
					$valor = $valor * $quantidade;

					//agora falo que tem promo na variavel
					$tem_promo = true;
			
				}else{
					//jogo o valor do produto na variavel
					$valor = $item['valor'];
						//recebo a quantidade
					$quantidade = $item['quantidade'];
					//multiplico pela quantidade do produto
					$valor = $valor * $quantidade;
					//agora falo que tem produto cheio
					$tem_cheio = true;		
					
				
				}
				//assino a sigla
				$carrinho->produtos[$key]['sigla_tamanho'] = $tamanho_produto['DS_SIGLA_TARC'];
				//assino o valor
 				$carrinho->produtos[$key]['total_produto'] = $valor;
				//atribuo o valor total do carrinho
				$valor_total = $valor_total + $valor;	
			

			}
			//assino ao view
			$view->_total_carrinho = $valor_total;
			//assino a quantidade de produtos no carrinho
			$view->_totalprodutos = $carrinho->produtos;

			// Cria o objeto de conexão
			$db = Zend_Registry::get("db");
			//crio a query de categorias
			$select_categorias = "SELECT
								NR_SEQ_CATEGPRO_PCRC,
								DS_CATEGORIA_PCRC

							FROM
							    produtos_categoria
							WHERE
								DS_STATUS_PCRC = 'A'
							ORDER BY DS_CATEGORIA_PCRC ASC";

			// Monta a query
			$query_categoria = $db->query($select_categorias);

			//crio uma lista de categorias
			$lista_categoria = $query_categoria->fetchAll();

			//assino as categorias ao view
			$view->_categorias = $lista_categoria;

			//crio a query para selecionar o tipo de produtos para o filtro lateral
			$select_tipo = "SELECT
								NR_SEQ_CATEGPRO_PTRC,
								DS_CATEGORIA_PTRC
							FROM
							    produtos_tipo
							WHERE
								DS_STATUS_PTRC = 'A'
							ORDER BY DS_CATEGORIA_PTRC ASC";

			// Monta a query
			$query_tipo = $db->query($select_tipo);
			//crio uma lista de fotos
			$lista_tipo = $query_tipo->fetchAll();
			//assino os amigos ao view
			$view->_tipos = $lista_tipo;


	}

}
